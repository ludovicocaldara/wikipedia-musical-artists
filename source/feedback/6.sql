set echo on
drop view if exists feedback6;
drop table if exists beta_betas;
drop table if exists beta;

create table beta (
  id               varchar2(30) not null ,
  name             varchar2(255) not null unique,
  default_column   boolean default false,
  constraint beta_pk primary key(id)
);


create table beta_betas (
  id               integer generated by default on null as identity,
  beta1_id         varchar2(30) not null,
  beta2_id         varchar2(30) not null,
  constraint beta1_fk foreign key (beta1_id) references beta(id),
  constraint beta2_fk foreign key (beta2_id) references beta(id),
  constraint beta_betas_pk primary key(id)
);


create or replace json relational duality view feedback6 as
  beta @insert @update @delete
  {
    _id     : id
    name    : name
    default_column : default_column
    beta_betas : beta_betas @insert @update @delete @link(to: "BETA1_ID")
      [
        {
          beta_id : id
          beta @noinsert @update @nodelete @unnest @link(from: "BETA2_ID")
          {
            id : id
            name : name
            default_column : default_column
          }
        }
      ]
  };
  
declare
col soda_collection_t;
begin
    col := dbms_soda.create_dualv_collection('feedback6', 'FEEDBACK6');
end;
/



declare
  v_id1 varchar2(30);
  v_id2 varchar2(30);
begin
  v_id1 := f_get_object_id();

  insert into feedback6 values ('
  {
   "_id" : "'|| v_id1 ||'",
   "name": "son"
  }
  ');


  update feedback6 set data = ' 
  {
   "_id" : "'|| v_id1 ||'",
   "name": "son"
  }
  ' where json_value(data, '$._id') = v_id1;
  
  
/*
  v_id2 := f_get_object_id();
  insert into feedback6 values ('
  {
   "_id" : "'|| v_id2 ||'",
   "name": "father",
   "beta_betas" : [
     {
      "id" : "'|| v_id1 ||'",
      "name": "son"
     }
   ]
  }
  ');

  update feedback6 set data = ' 
  {
   "_id" : "'|| v_id2 ||'",
   "name": "father",
   "beta_betas" : [
     {
      "id" : "'|| v_id1 ||'",
      "name": "son"
     }
   ]
  }
  ' where json_value(data, '$._id') = v_id2;
*/

end;
/

